# -------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
# --------------------------------------------------------------------------
# Azure CI Pipeline

trigger:
  branches:
    include:
    - dev
    - main
    - release/*

pr:
  branches:
    include:
    - dev
    - main

variables:
  TestFolder: '$(Build.SourcesDirectory)/test/'
  NodeVersion: '12.x'
  pythonVersion: '3.8'

schedules:
- cron: "0 8 * * 1,2,3,4"
  displayName: Monday to Thursday 1 AM build
  branches:
    include:
      - dev
      - main
      - release/*
    exclude:
    - releases/ancient/*

jobs:
  - job: 'AutoRest_AzFunctions_Python_CI'
    displayName: 'Run AutoRest CI Checks'

    strategy:
      matrix:
        Python38:
          pythonVersion: '$(pythonVersion)'
          CoverageArg: ''

    pool:
      vmImage: 'ubuntu-18.04'

    steps:
      - task: NodeTool@0
        displayName: 'Install Node.js $(NodeVersion)'
        inputs:
          versionSpec: '$(NodeVersion)'

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.8'
          addToPath: true

      - task: DockerInstaller@0
        displayName: Docker Installer
        inputs:
          dockerVersion: 17.09.0-ce
          releaseType: stable

      - script: |
          cd $(Build.SourcesDirectory)
          pip install --upgrade pip
          pip install -r dev_requirements.txt
          # npm install -g autorest
          npm install -g bats
        displayName: 'Prepare Environment for Generation'

      - script: |
          pylint autorest
        displayName: 'Pylint'
        continueOnError: true 

      - script: |
          mypy autorest
        displayName: 'Mypy'
        continueOnError: true 

      - script: |
          pytest --instafail --cov=./autorest --cov-report xml --cov-branch test/unittests
        displayName: 'Unit tests'
        continueOnError: true 

      - script: |
          bats $(TestFolder)/integrationtests/tests/
        displayName: 'Run integration tests using bats'
        condition: always()
